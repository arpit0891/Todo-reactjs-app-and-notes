{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/a/Documents/react/project1/my-app/src/App.js\";\nimport React from \"react\"; // import Footer from './Footer'\n// import TodoItem from \"./TodoItem\"\n// import TodoData from \"./TodoData\"\n// //import ReactDOM from \"react-dom\"\n// function App(){\n//     const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n// return (\n//     //Note: can return only one \n//     <div className=\"todo-list\">\n//     {// note do not double declare things}\n//     {/* < TodoItem /> */}\n//     {todoItems}    \n//     < Footer />\n//     </div>\n//     )\n// }\n// Class based\n// class App extends React.Component{\n//     yourmethodhere(){\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const style=this.yourmethodhere()\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code\n//                 </div>\n//         )\n//     }\n// }\n\nclass App extends React.Component {\n  constructor() {\n    super(); //bring goodies from whatever you are extending or make them global\n\n    this.state = {\n      answer: \"Yes\"\n    };\n  }\n\n  render() {\n    //Always include this keyword before whatever you are taking\n    const date = new Date();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Your code \", this.state.answer, \"//\", /*#__PURE__*/_jsxDEV(ChildComponet, {\n        answer: this.state.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/a/Documents/react/project1/my-app/src/App.js"],"names":["React","App","Component","constructor","state","answer","render","date","Date"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,GAAE;AACjB,YADiB,CAEjB;;AACI,SAAKC,KAAL,GAAa;AACbC,MAAAA,MAAM,EAAE;AADK,KAAb;AAGC;;AACDC,EAAAA,MAAM,GAAE;AACJ;AACA,UAAMC,IAAI,GAAE,IAAIC,IAAJ,EAAZ;AACA,wBACI;AAAA,+BACe,KAAKJ,KAAL,CAAWC,MAD1B,qBAEM,QAAC,aAAD;AAAe,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAjB4B;;AAmBjC,eAAeJ,GAAf","sourcesContent":["import React from \"react\"\n// import Footer from './Footer'\n// import TodoItem from \"./TodoItem\"\n// import TodoData from \"./TodoData\"\n// //import ReactDOM from \"react-dom\"\n// function App(){\n//     const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n// return (\n//     //Note: can return only one \n//     <div className=\"todo-list\">\n//     {// note do not double declare things}\n//     {/* < TodoItem /> */}\n//     {todoItems}    \n//     < Footer />\n//     </div>\n//     )\n// }\n// Class based\n\n// class App extends React.Component{\n//     yourmethodhere(){\n\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const style=this.yourmethodhere()\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code\n//                 </div>\n//         )\n//     }\n// }\nclass App extends React.Component{\n    constructor(){\nsuper()\n//bring goodies from whatever you are extending or make them global\n    this.state = {\n    answer: \"Yes\"\n    }\n    }\n    render(){\n        //Always include this keyword before whatever you are taking\n        const date =new Date();\n        return(\n            <div>\n                Your code {this.state.answer}\n                //<ChildComponet answer={this.state.answer} />\n               </div>\n        )\n    }\n}\nexport default App"]},"metadata":{},"sourceType":"module"}