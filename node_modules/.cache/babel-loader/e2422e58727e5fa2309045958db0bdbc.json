{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/a/Documents/react/project1/my-app/src/App.js\";\nimport React from \"react\";\nimport Footer from './Footer';\nimport TodoItem from \"./TodoItem\";\nimport TodoData from \"./TodoData\"; // //import ReactDOM from \"react-dom\"\n// function App(){\n//     const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n// return (\n//     //Note: can return only one \n//     <div className=\"todo-list\">\n//     {// note do not double declare things}\n//     {/* < TodoItem /> */}\n//     {todoItems}    \n//     < Footer />\n//     </div>\n//     )\n// }\n// Class based\n// class App extends React.Component{\n//     yourmethodhere(){\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const style=this.yourmethodhere()\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code\n//                 </div>\n//         )\n//     }\n// }\n// class App extends React.Component{\n//     constructor(){\n// super()\n// //bring goodies from whatever you are extending or make them global\n//     this.state = {\n//     answer: \"Yes\"\n//     }\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code {this.state.answer}\n//                 {/* <ChildComponet answer={this.state.answer} /> */}\n//                </div>\n//         )\n//     }\n// }\n// class App extends React.Component{\n//     constructor(){\n//         super()\n//         this.state ={\n//             todos: TodoData,\n//             count: 0\n//         }\n//         this.handleClick=this.handleClick.bind(this)\n//     }\n//     handleClick(){\n//         this.setState(prevState =>{\n//             return{\n//                 count: prevState.count + 1\n//             }\n//         })\n//     }\n//     // componentWillMount(){\n//     // }\n//     // componentDidMount(){\n//     //     //Get the data I neeed to corectly display\n//     // }\n//     // componentWillReceiveProps(nextProps){\n//     //     if (nextProps.whatever) !== this.props.whatever ){\n//     //         //do something important\n//     //     }\n//     // }\n//     // shouldComponentUpdate(nextProps, nextState){\n//     //     //return true if want it to update\n//     //     //return false if not\n//     // }\n//     // componentWillUnmount(){\n//     //     //teardown or cleanup your codebefore your component disappear\n//     // }\n//         render(){\n//             const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n//             return(\n//                 <div className=\"todo-list\">\n//                     {todoItems}\n//                     {this.state.count}\n//                     <button \n//                     onClick=\n//                     {this.handleClick}>\n//                         Click here\n//                    </button>\n//                   {/*</div><ChildComponet count={this.state.count}> */}\n//                     </div>\n//             )\n//         }\n// }\n//Login \n\nclass App extends React.Component() {\n  constructor() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/a/Documents/react/project1/my-app/src/App.js"],"names":["React","Footer","TodoItem","TodoData","App","Component","constructor","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArkBJ,KAAK,CAACK,SAAN,EAAlB,CAAmC;AAC/BC,EAAAA,WAAW,GAAE,CAAE;;AACfC,EAAAA,MAAM,GAAE;AAAC,wBACL;AAAA;AAAA;AAAA;AAAA,YADK;AAKZ;;AAPkC;;AAUnC,eAAeH,GAAf","sourcesContent":["import React from \"react\"\nimport Footer from './Footer'\nimport TodoItem from \"./TodoItem\"\nimport TodoData from \"./TodoData\"\n// //import ReactDOM from \"react-dom\"\n// function App(){\n//     const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n// return (\n//     //Note: can return only one \n//     <div className=\"todo-list\">\n//     {// note do not double declare things}\n//     {/* < TodoItem /> */}\n//     {todoItems}    \n//     < Footer />\n//     </div>\n//     )\n// }\n// Class based\n\n// class App extends React.Component{\n//     yourmethodhere(){\n\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const style=this.yourmethodhere()\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code\n//                 </div>\n//         )\n//     }\n// }\n// class App extends React.Component{\n//     constructor(){\n// super()\n// //bring goodies from whatever you are extending or make them global\n//     this.state = {\n//     answer: \"Yes\"\n//     }\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code {this.state.answer}\n//                 {/* <ChildComponet answer={this.state.answer} /> */}\n//                </div>\n//         )\n//     }\n// }\n\n// class App extends React.Component{\n//     constructor(){\n//         super()\n//         this.state ={\n//             todos: TodoData,\n//             count: 0\n//         }\n//         this.handleClick=this.handleClick.bind(this)\n//     }\n//     handleClick(){\n//         this.setState(prevState =>{\n//             return{\n//                 count: prevState.count + 1\n//             }\n//         })\n//     }\n//     // componentWillMount(){\n\n//     // }\n//     // componentDidMount(){\n//     //     //Get the data I neeed to corectly display\n//     // }\n//     // componentWillReceiveProps(nextProps){\n//     //     if (nextProps.whatever) !== this.props.whatever ){\n//     //         //do something important\n//     //     }\n//     // }\n//     // shouldComponentUpdate(nextProps, nextState){\n//     //     //return true if want it to update\n//     //     //return false if not\n//     // }\n//     // componentWillUnmount(){\n//     //     //teardown or cleanup your codebefore your component disappear\n//     // }\n\n//         render(){\n//             const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n//             return(\n//                 <div className=\"todo-list\">\n//                     {todoItems}\n//                     {this.state.count}\n//                     <button \n//                     onClick=\n//                     {this.handleClick}>\n//                         Click here\n//                    </button>\n//                   {/*</div><ChildComponet count={this.state.count}> */}\n//                     </div>\n//             )\n//         }\n// }\n//Login \nclass App extends React.Component(){\n    constructor(){}\n    render(){return (\n        <div>\n\n        </div>\n    )\n}\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}