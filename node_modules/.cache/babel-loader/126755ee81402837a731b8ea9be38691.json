{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/a/Documents/react/project1/my-app/src/App.js\";\nimport React from \"react\";\nimport Footer from './Footer';\nimport TodoItem from \"./TodoItem\";\nimport TodoData from \"./TodoData\"; // //import ReactDOM from \"react-dom\"\n// function App(){\n//     const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n// return (\n//     //Note: can return only one \n//     <div className=\"todo-list\">\n//     {// note do not double declare things}\n//     {/* < TodoItem /> */}\n//     {todoItems}    \n//     < Footer />\n//     </div>\n//     )\n// }\n// Class based\n// class App extends React.Component{\n//     yourmethodhere(){\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const style=this.yourmethodhere()\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code\n//                 </div>\n//         )\n//     }\n// }\n// class App extends React.Component{\n//     constructor(){\n// super()\n// //bring goodies from whatever you are extending or make them global\n//     this.state = {\n//     answer: \"Yes\"\n//     }\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code {this.state.answer}\n//                 {/* <ChildComponet answer={this.state.answer} /> */}\n//                </div>\n//         )\n//     }\n// }\n// class App extends React.Component{\n//     constructor(){\n//         super()\n//         this.state ={\n//             todos: TodoData,\n//             count: 0\n//         }\n//         this.handleClick=this.handleClick.bind(this)\n//     }\n//     handleClick(){\n//         this.setState(prevState =>{\n//             return{\n//                 count: prevState.count + 1\n//             }\n//         })\n//     }\n//     // componentWillMount(){\n//     // }\n//     // componentDidMount(){\n//     //     //Get the data I neeed to corectly display\n//     // }\n//     // componentWillReceiveProps(nextProps){\n//     //     if (nextProps.whatever) !== this.props.whatever ){\n//     //         //do something important\n//     //     }\n//     // }\n//     // shouldComponentUpdate(nextProps, nextState){\n//     //     //return true if want it to update\n//     //     //return false if not\n//     // }\n//     // componentWillUnmount(){\n//     //     //teardown or cleanup your codebefore your component disappear\n//     // }\n//         render(){\n//             const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n//             return(\n//                 <div className=\"todo-list\">\n//                     {todoItems}\n//                     {this.state.count}\n//                     <button \n//                     onClick=\n//                     {this.handleClick}>\n//                         Click here\n//                    </button>\n//                   {/*</div><ChildComponet count={this.state.count}> */}\n//                     </div>\n//             )\n//         }\n// }\n//Login \n// class App extends React.Component {\n//     constructor(){\n//         super()\n//         this.state={\n//             isLocggedin: false\n//         }\n//         this.handleClick=this.handleClick.bind(this)\n//     }\n//     handleClick(){\n//         this.setState(prevState =>\n//             {\n//                 return{\n//                     isLoggedin: !prevState.isLoggedin\n//                 }\n//             })\n//     }\n//     render(){\n//            let buttontext=this.state.isLoggedin?\"Log out\":\"Login\"\n//            return (\n//         <div>\n//             <button onClick={this.handleClick}>{buttontext}</button>\n//         </div>\n//     )\n// }\n// }\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: TodoData,\n      count: 0\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => {\n      return {\n        count: prevState.count + 1\n      };\n    });\n  }\n\n  render() {\n    const todoItems = TodoData.map(item => /*#__PURE__*/_jsxDEV(TodoItem, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 51\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [todoItems, this.state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/a/Documents/react/project1/my-app/src/App.js"],"names":["React","Footer","TodoItem","TodoData","App","Component","constructor","state","todos","count","handleClick","bind","setState","prevState","render","todoItems","map","item","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArkBJ,KAAK,CAACK,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,KAAK,EAAEL,QADC;AAERM,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAIA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AACH;;AACDD,EAAAA,WAAW,GAAE;AACT,SAAKE,QAAL,CAAcC,SAAS,IAAG;AACtB,aAAM;AACFJ,QAAAA,KAAK,EAAEI,SAAS,CAACJ,KAAV,GAAkB;AADvB,OAAN;AAGH,KAJD;AAKH;;AACGK,EAAAA,MAAM,GAAE;AACJ,UAAMC,SAAS,GAAEZ,QAAQ,CAACa,GAAT,CAAaC,IAAI,iBAAI,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YAArB,CAAjB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACKH,SADL,EAEK,KAAKR,KAAL,CAAWE,KAFhB,eAGI;AACA,QAAA,OAAO,EACN,KAAKC,WAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA7BwB;;AA+BjC,eAAeN,GAAf","sourcesContent":["import React from \"react\"\nimport Footer from './Footer'\nimport TodoItem from \"./TodoItem\"\nimport TodoData from \"./TodoData\"\n// //import ReactDOM from \"react-dom\"\n// function App(){\n//     const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n// return (\n//     //Note: can return only one \n//     <div className=\"todo-list\">\n//     {// note do not double declare things}\n//     {/* < TodoItem /> */}\n//     {todoItems}    \n//     < Footer />\n//     </div>\n//     )\n// }\n// Class based\n\n// class App extends React.Component{\n//     yourmethodhere(){\n\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const style=this.yourmethodhere()\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code\n//                 </div>\n//         )\n//     }\n// }\n// class App extends React.Component{\n//     constructor(){\n// super()\n// //bring goodies from whatever you are extending or make them global\n//     this.state = {\n//     answer: \"Yes\"\n//     }\n//     }\n//     render(){\n//         //Always include this keyword before whatever you are taking\n//         const date =new Date();\n//         return(\n//             <div>\n//                 Your code {this.state.answer}\n//                 {/* <ChildComponet answer={this.state.answer} /> */}\n//                </div>\n//         )\n//     }\n// }\n\n// class App extends React.Component{\n//     constructor(){\n//         super()\n//         this.state ={\n//             todos: TodoData,\n//             count: 0\n//         }\n//         this.handleClick=this.handleClick.bind(this)\n//     }\n//     handleClick(){\n//         this.setState(prevState =>{\n//             return{\n//                 count: prevState.count + 1\n//             }\n//         })\n//     }\n//     // componentWillMount(){\n\n//     // }\n//     // componentDidMount(){\n//     //     //Get the data I neeed to corectly display\n//     // }\n//     // componentWillReceiveProps(nextProps){\n//     //     if (nextProps.whatever) !== this.props.whatever ){\n//     //         //do something important\n//     //     }\n//     // }\n//     // shouldComponentUpdate(nextProps, nextState){\n//     //     //return true if want it to update\n//     //     //return false if not\n//     // }\n//     // componentWillUnmount(){\n//     //     //teardown or cleanup your codebefore your component disappear\n//     // }\n\n//         render(){\n//             const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n//             return(\n//                 <div className=\"todo-list\">\n//                     {todoItems}\n//                     {this.state.count}\n//                     <button \n//                     onClick=\n//                     {this.handleClick}>\n//                         Click here\n//                    </button>\n//                   {/*</div><ChildComponet count={this.state.count}> */}\n//                     </div>\n//             )\n//         }\n// }\n//Login \n// class App extends React.Component {\n//     constructor(){\n//         super()\n//         this.state={\n//             isLocggedin: false\n//         }\n//         this.handleClick=this.handleClick.bind(this)\n//     }\n//     handleClick(){\n//         this.setState(prevState =>\n//             {\n//                 return{\n//                     isLoggedin: !prevState.isLoggedin\n//                 }\n//             })\n//     }\n//     render(){\n//            let buttontext=this.state.isLoggedin?\"Log out\":\"Login\"\n//            return (\n     \n//         <div>\n//             <button onClick={this.handleClick}>{buttontext}</button>\n//         </div>\n//     )\n// }\n// }\nclass App extends React.Component{\n    constructor(){\n        super()\n        this.state ={\n            todos: TodoData,\n            count: 0\n        }\n        this.handleClick=this.handleClick.bind(this)\n    }\n    handleClick(){\n        this.setState(prevState =>{\n            return{\n                count: prevState.count + 1\n            }\n        })\n    }\n        render(){\n            const todoItems= TodoData.map(item => <TodoItem key={item.id} item={item} />)\n            return(\n                <div className=\"todo-list\">\n                    {todoItems}\n                    {this.state.count}\n                    <button \n                    onClick=\n                    {this.handleClick}>\n                        Click here\n                   </button>\n                    </div>\n            )\n        }\n}\nexport default App"]},"metadata":{},"sourceType":"module"}